#lang racket

;;;
;;; Define all items
;;;

(require racket/undefined)
(provide (struct-out item$) get-item)

(struct item$ (name base-value) #:transparent)

(define raw-items
  '((Activated-Cadmium 450)
    (Activated-Copper 245)
    (Activated-Emeril 696)
    (Activated-Indium 949)
    (Ammonia 62)
    (Cactus-Flesh 28)
    (Cadmium 234)
    (Carbon 7)
    (Chlorine 602)
    (Chromatic-Metal 245)
    (Cobalt 198)
    (Condensed-Carbon 24)
    (Copper 110)
    (Coprite 30)
    (Deuterium 34)
    (Di-hydrogen 34)
    (Dioxite 62)
    (Emeril 275)
    (Ferrite-Dust 14)
    (Frost-Crystal 12)
    (Fungal-Mould 16)
    (Gamma-Root 16)
    (Gold 202)
    (Indium 464)
    (Ionised-Cobalt 401)
    (Kelp-Sac 41)
    (Living-Slime 20)
    (Magnetised-Ferrite 82)
    (Marrow-Bulb 41)
    (Mordite 40)
    (Nitrogen 20)
    (Oxygen 34)
    (Paraffinium 62)
    (Phosphorus 62)
    (Platinum 303)
    (Pugneum 138)
    (Pure-Ferrite 14)
    (Pyrite 62)
    (Radon 20)
    (Residual-Goop 20)
    (Runaway-Mould 20)
    (Rusted-Metal 20)
    (Salt 299)
    (Silver 101)
    (Sodium 41)
    (Sodium-Nitrate 82)
    (Solanium 70)
    (Star-Bulb 32)
    (Sulphurine 20)
    (Tritium 6)
    (Uranium 62)
    (Viscous-Fluids 20)

    ;; Other items
    (Acid 188000)
    (Advanced-Ion-Battery 500)
    (Aronium 25000)
    (Antimatter 5233)
    (Antimatter-Housing 6500)
    Carbon-Crystal
    (Carbon-Nanotubes 500)
    Chloride-Lattice
    (Circuit-Board 916250)
    (Cobalt-Mirror 20500)
    (Cryo-Pump 1500000)
    (Cryogenic-Chamber 3800000)
    (Di-hydrogen-Jelly 200)
    Dirty-Bronze
    (Enriched-Carbon 50000)
    (Geodesite 150000)
    (Frigate-Fuel-50 20000)
    (Fuel-Oxidiser 75000)
    (Explosive-Drones 75000)
    (Glass 13000)
    (Grantine 25000)
    (Heat-Capacitor 180000)
    (Hermetic-Seal 800)
    (Herox 25000)
    (Holographic-Analyser 75000)
    (Hot-Ice 320000)
    (Ion-Battery 200)
    (Iridesite 150000)
    (Lemmium 25000)
    (Life-Support-Gel 200)
    (Liquid-Explosive 800500)
    (Living-Glass 566000)
    (Lubricant 566000)
    (Magno-Gold 25000)
    (Metal-Plating 800)
    (Microprocessor 2000)
    (Mind-Control-Device 75000)
    (Mineral-Compressor 75000)
    (Nitrogen-Salt 50000)
    (Organic-Catalyst 320000)
    (Poly-Fibre 130000)
    (Oxygen-Capsule 350)
    (Oxygen-Filter 615)
    (Projectile-Ammo 50)
    Quad-Servo
    (Quantum-Processor 4400000)
    (Salt-Refractor 30500)
    (Semiconductor 320000)
    (Sodium-Diode 3500)
    (Starship-Launch-Fuel 450)
    (Stasis-Device 15600000)
    (Superconductor 1500000)
    (Thermic-Condensate 50000)
    (Unstable-Gel 50000)
    (Unstable-Plasma 5750)
    Walker-Brain
    (Warp-Cell 46750)))

(define items (make-hasheq
               (for/list ((def raw-items))
                 (match def
                   [(list n v) #:when (and (symbol? n) (integer? v)) (cons n (item$ n v))]
                   [n #:when (symbol? n) (cons n (item$ n undefined))]))))

(define (get-item name)
  (hash-ref items name))